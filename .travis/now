#!/usr/bin/env bash
#-------------------------------------------------------------------------------
# Copyright (C) 2012-2019 British Crown (Met Office) & Contributors.
#
# This file is part of Rose, a framework for meteorological suites.
#
# Rose is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rose is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Rose. If not, see <http://www.gnu.org/licenses/>.
#-------------------------------------------------------------------------------

# Bash script for use with Travis-CI builds.
#
# usage: now command [args...]
#
# commands:
#     build
#     install
#     report_coverage
#     test

# source the .bashrc because for some reason this doesn't get done for us
# do this before the set -eu to avoid bailing on the build for hardcoded
# bashrc issues
if [[ -f "${HOME}/.bashrc" ]]; then
    source "${HOME}/.bashrc"
fi


set -eu

APT=()
PIP=()
NPM=()
PY_PATH=()
RC_PATH=("${HOME}")

_join () {
    local IFS="$1";
    shift;
    echo "$*";
}

_build_docs () {
    rose make-docs --strict clean html slides latexpdf
}

_install_coverage () {
    export COVERAGE_PROCESS_START="${TRAVIS_BUILD_DIR}/.coveragerc"
    PIP+=(coverage pytest-cov)
    PY_PATH+=("${TRAVIS_BUILD_DIR}/.travis")
}

_install_rose () {
    PIP+=(aiofiles)
    PY_PATH+=("${TRAVIS_BUILD_DIR}/lib/python/")
    RC_PATH+=("${TRAVIS_BUILD_DIR}/bin")
}

_install_cylc () {
    wget 'https://github.com/cylc/cylc-flow/archive/master.tar.gz' \
        -O - | tar -xz -C "${HOME}"
    pip install -e "${HOME}/cylc-flow-master"
    APT+=(at heirloom-mailx)
    PIP+=(colorama python-jose pyzmq Jinja2)
    RC_PATH+=("${HOME}/cylc-master/bin")
}

_install_fcm () {
    sudo sh -c 'echo "deb http://opensource.wandisco.com/ubuntu \
        `lsb_release -cs` svn19" >> /etc/apt/sources.list.d/subversion19.list'
    sudo wget -q http://opensource.wandisco.com/wandisco-debian.gpg -O- | \
        sudo apt-key add -
    wget 'https://github.com/metomi/fcm/archive/master.tar.gz' \
        -O '/tmp/fcm-master.tar.gz'
    tar -xvf '/tmp/fcm-master.tar.gz' -C "${HOME}"
    APT+=(subversion build-essential gfortran libxml-parser-perl \
          libconfig-inifiles-perl libdbi-perl libdbd-sqlite3-perl)
    RC_PATH+=("${HOME}/fcm-master/bin")
}

_install_sphinx () {
    # sphinx documentation and its extensions
    APT+=(latexmk texlive texlive-generic-extra texlive-latex-extra \
          texlive-fonts-recommended graphviz)
    PIP+=(sphinx sphinx_rtd_theme sphinxcontrib-httpdomain hieroglyph)
}

_install_tut_suite () {
    # cylc tutorial suite
    PIP+=(pillow)
}

_install_pytest () {
    # pytest and its extensions
    PIP+=(pytest)
}

_install_linters () {
    PIP+=(pycodestyle)
    NPM+=(eslint)
}

_test_units () {
    pytest --cov-append lib/python/rose/tests/*
}

_test_style () {
    pycodestyle
    eslint .
}

_test_battery () {
    cp "${TRAVIS_BUILD_DIR}/.travis/sitecustomize.py" ./lib/python
    coverage run .travis/cover.py
    rm ./lib/python/sitecustomize.py
}

_test_docs () {
    rose make-docs --strict clean linkcheck doctest
}

build () {
    for arg in "$@"; do
        "_build_${arg}"
    done
}

install () {
    for arg in "$@"; do
        "_install_${arg}"
    done

    if [[ ${#PIP[@]} -gt 0 ]]; then
        pip install "${PIP[@]}" &
    fi

    if [[ ${#NPM[@]} -gt 0 ]]; then
        npm install -g "${NPM[@]}" &
    fi

    if [[ ${#APT[@]} -gt 0 ]]; then
        sudo apt-get update
        sudo apt-get install -y "${APT[@]}"
    fi

    wait

    cat >"${HOME}/.bashrc" \
        <<<"export PATH=\"$(_join ':' "${RC_PATH[@]}"):\$PATH\";"
    cat >>"${HOME}/.bashrc" \
        <<<"export PYTHONPATH=\"$(_join ':' "${PY_PATH[@]}"):\$PYTHONPATH\";"
}

_report_coverage () {
    coverage combine --append
    coverage xml --ignore-errors
    bash <(curl -s https://codecov.io/bash)
}

_report_error() {
    # don't bail out on error
    set +eu

    printenv PATH PYTHONPATH
    rose check-software
    cat /tmp/sphinx-err*  # sphinx traceback
}

report () {
    for arg in "$@"; do
        "_report_${arg}"
    done
}

test () {
    PS1='$' . "${HOME}/.bashrc"
    for arg in "$@"; do
        "_test_${arg}"
    done
}

# do this here so we only trace the commands we are interested in
set -o xtrace

# run the specified function
"$@"
